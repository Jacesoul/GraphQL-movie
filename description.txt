### GraphQL 

- graphql-yoga는 GraphQL 프로젝트를 빠르게 시작할수 있다.
- yarn add graphql-yoga
- Over-fetching / Under-fetching
- DB에 내가 사용하지 않을 영역을 요청하는 방식은 효율적이지 못하다.
- Over-fetching은 요청한 영역의 정보보다 많은 정보를 서버에서 받는것을 말한다. 비효율적이고 개발자들이 뭘 받았는지 모르게된다.
- Over-fetching은 GraphQL로 해결할수있다.
- Under-fetching은 어떤 하나를 완성하기 위해 다른 요청들을 해야할때 발생하는데 예를들어 앱을 처음 시작할때 세가지 요청을 해야한다면 3가지 요청이 3번 오고가야 앱이 시작이된다. (REST에서 하나를 완성하려고 많은 소스를 요청한다)
- Over-fetching 또한 GraphQL로 해결할수있다. 
- GraphQL을 한 쿼리에 정확하게 원하는 정보만 받을수있다.
- GraphQL에서는 URL이 존재하지 않는다. 요청한 정보들만 받을수 있고 원하는 방식으로 조정할수있다.
- yarn global add nodemon
- yarn add babel-node --dev
- npm install -g babel-cli
- babel-node는 기본적으로 더 좋게 코드를 작성하게 만들어준다.
- yarn add babel-cli babel-preset-env babel-preset-stage-3 --dev
- graphql-yoga로 서버를 시작하는일은 너무나도 쉽다. 
- schema는 사용자에게 보내거나 사용자로부터 받을 data 대한 설명이다.
- Quer는 정보를 받을때 쓰이고 GraphQL은 이런 specification(자세한 설명)과 서버에 이러한 유형들을 정의해 놓고있다.
- Mutation(변형)은 서버 혹은 DB, 메모리에서 정보를 바꾸는 작업을 할때 이런것들을 일컫는다.
- resolver는 Query를 resolve(해결)하는것이다. Query는 DB에게는 문제같은것이다. 그래서 이 Query를 방식으로 resolve(해결)해야한다.